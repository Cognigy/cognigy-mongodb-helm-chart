image:
  registry: docker.io
  repository: bitnami/mongodb
  tag: 4.4.6-debian-10-r8
  pullPolicy: IfNotPresent
  debug: false
clusterDomain: cluster.local
extraDeploy: []
commonAnnotations: {}
architecture: replicaset
useStatefulSet: true
auth:
  enabled: true
  rootPassword: ""
  replicaSetKey: ""
persistence:
  enabled: true
  accessModes:
    - ReadWriteOnce
  size: 8Gi
  annotations: {}
  mountPath: /bitnami/mongodb
  subPath: ""
  volumeClaimTemplates:
    selector:
    requests:
    dataSource:
tls:
  enabled: false
  autoGenerated: true
  image:
    registry: docker.io
    repository: bitnami/nginx
    tag: 1.19.10-debian-10-r39
    pullPolicy: IfNotPresent
hostAliases: []
replicaSetName: rs0
replicaSetHostnames: true
enableIPv6: false
directoryPerDB: false
systemLogVerbosity: 0
disableSystemLog: false
disableJavascript: false
enableJournal: true
configuration: ""
initdbScripts: {}
extraFlags: []
extraEnvVars: []
annotations: {}
labels: {}
replicaCount: 3
strategyType: RollingUpdate
podManagementPolicy: OrderedReady
podAffinityPreset: ""
podAntiAffinityPreset: soft # should be 'hard' when deployed to production
nodeAffinityPreset:
  type: ""
  key: ""
  values: []
affinity:
  podAntiAffinity: 
    requiredDuringSchedulingIgnoredDuringExecution: 
      - labelSelector: 
          matchExpressions: 
            - key: "uniquezone"
              operator: In
              values: 
              - "set"
        topologyKey: "topology.kubernetes.io/zone"
nodeSelector: {}
tolerations: []
podLabels: 
  uniquezone: set
podAnnotations: {}
podSecurityContext:
  enabled: true
  fsGroup: 1001
  sysctls: []
containerSecurityContext:
  enabled: true
  runAsUser: 1001
  runAsNonRoot: true
resources:
  limits: {}
  requests: {}
livenessProbe:
  enabled: true
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 6
  successThreshold: 1
readinessProbe:
  enabled: true
  initialDelaySeconds: 5
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 6
  successThreshold: 1
startupProbe:
  enabled: false
  initialDelaySeconds: 5
  periodSeconds: 10
  timeoutSeconds: 5
  successThreshold: 1
  failureThreshold: 30
customLivenessProbe: {}
customReadinessProbe: {}
customStartupProbe: {}
initContainers: {}
sidecars: {}
extraVolumeMounts: []
extraVolumes: []
pdb:
  create: false
  minAvailable: 1
service:
  nameOverride: ""
  type: ClusterIP
  port: 27017
  portName: mongodb
  nodePort: ""
  externalIPs: []
  loadBalancerSourceRanges: []
  annotations: {}
externalAccess:
  enabled: false
  autoDiscovery:
    enabled: false
    image:
      registry: docker.io
      repository: bitnami/kubectl
      tag: 1.19.11-debian-10-r8
      pullPolicy: IfNotPresent
      pullSecrets: []
    resources:
      limits: {}
      requests: {}
  service:
    type: LoadBalancer
    port: 27017
    loadBalancerIPs: []
    loadBalancerSourceRanges: []
    nodePorts: []
    annotations: {}
  hidden:
    enabled: false
    service:
      type: LoadBalancer
      port: 27017
      loadBalancerIPs: []
      loadBalancerSourceRanges: []
      nodePorts: []
      annotations: {}
arbiter:
  enabled: true
  configuration: ""
  hostAliases: []
  extraFlags: []
  extraEnvVars: []
  annotations: {}
  labels: {}
  podAffinityPreset: ""
  podAntiAffinityPreset: soft
  nodeAffinityPreset:
    type: ""
    key: ""
    values: []
  affinity: {}
  nodeSelector: {}
  tolerations: []
  podLabels: {}
  podAnnotations: {}
  podSecurityContext:
    enabled: true
    fsGroup: 1001
    sysctls: []
  containerSecurityContext:
    enabled: true
    runAsUser: 1001
  resources:
    limits: {}
    requests: {}
  livenessProbe:
    enabled: true
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  readinessProbe:
    enabled: true
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  customLivenessProbe: {}
  customReadinessProbe: {}
  initContainers: {}
  sidecars: {}
  extraVolumeMounts: []
  extraVolumes: []
  pdb:
    create: false
    minAvailable: 1
  service:
    nameOverride: ""
serviceAccount:
  create: true
  annotations: {}
rbac:
  create: true
  role:
    rules: []
podSecurityPolicy:
  create: true
  allowPrivilegeEscalation: false
  privileged: false
  spec: {}
volumePermissions:
  enabled: false
  image:
    registry: docker.io
    repository: bitnami/bitnami-shell
    tag: 10-debian-10-r91
    pullPolicy: Always
    pullSecrets: []
  resources:
    limits: {}
    requests: {}
  securityContext:
    runAsUser: 0
metrics:
  enabled: true
  image:
    registry: docker.io
    repository: bitnami/mongodb-exporter
    tag: 0.11.2-debian-10-r178
    pullPolicy: IfNotPresent
  extraFlags: ""
  extraUri: ""
  resources:
    limits: {}
    requests: {}
  containerPort: 9216
  service:
    annotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "{{ .Values.metrics.service.port }}"
      prometheus.io/path: "/metrics"
    type: ClusterIP
    port: 9216
  livenessProbe:
    enabled: true
    initialDelaySeconds: 15
    periodSeconds: 5
    timeoutSeconds: 5
    failureThreshold: 3
    successThreshold: 1
  readinessProbe:
    enabled: true
    initialDelaySeconds: 5
    periodSeconds: 5
    timeoutSeconds: 1
    failureThreshold: 3
    successThreshold: 1
  serviceMonitor:
    enabled: true
    interval: 30s
    additionalLabels: {}
  prometheusRule:
    enabled: false
    additionalLabels: {}
    rules: {}
hidden:
  enabled: false
  configuration: ""
  extraFlags: []
  extraEnvVars: []
  annotations: {}
  labels: {}
  replicaCount: 1
  strategyType: RollingUpdate
  podManagementPolicy: OrderedReady
  podAffinityPreset: ""
  podAntiAffinityPreset: soft
  nodeAffinityPreset:
    type: ""
    key: ""
    values: []
  affinity: {}
  nodeSelector: {}
  tolerations: []
  podLabels: {}
  podAnnotations: {}
  resources:
    limits: {}
    requests: {}
  livenessProbe:
    enabled: true
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  readinessProbe:
    enabled: true
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  customLivenessProbe: {}
  customReadinessProbe: {}
  initContainers: {}
  sidecars: {}
  extraVolumeMounts: []
  extraVolumes: []
  pdb:
    create: false
    minAvailable: 1
  persistence:
    enabled: true
    accessModes:
      - ReadWriteOnce
    size: 8Gi
    annotations: {}
    mountPath: /bitnami/mongodb
    subPath: ""
    volumeClaimTemplates:
      selector:
      dataSource:
